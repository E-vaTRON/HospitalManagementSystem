// <auto-generated />
using System;
using HospitalManagementSystem.DataProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalManagementSystem.Context.Migrations
{
    [DbContext(typeof(HospitalManagementSystemDbContext))]
    partial class HospitalManagementSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.AnalysisTest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeviceServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DoctorComment")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEpisodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Result")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("AnalysisTest");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.AssignmentHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEpisodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReferralDoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AssignmentHistory");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.BookingAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("BookingAppointment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceInventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalDeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StorageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DeviceInventory");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceService", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeviceInventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DeviceService");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Diagnosis", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("DiagnosisCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.Property<Guid?>("DiseasesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEpisodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Symptom")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Diagnosis");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DiagnosisTreatment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DiagnosisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Order")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<Guid?>("TreatmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DiagnosisTreatment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Diseases", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Drug", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActiveIngredientName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("GoodName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("GoodType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("GroupId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.Property<string>("HealthInsurancePrice")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Interactions")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("SideEffects")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("UnitPrice")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Drug");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DrugInventory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("GoodSupplingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("StorageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DrugInventory");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DrugPrescription", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DrugInventoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEposodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DrugPrescription");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.GoodSuppling", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DrugId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GoodInformation")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<Guid?>("ImportationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("OrinaryAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GoodSuppling");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDCode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DiseasesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ICDCode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDCodeVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ICDCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ICDVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ICDCodeVersion");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("ICDVersion");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Importation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Billnumber")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Company")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ReceiptDay")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceiptNumber")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("RecordDay")
                        .HasColumnType("datetime");

                    b.Property<int>("Tax")
                        .HasColumnType("int");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Importation");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("GroupID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("SmallID")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("MedicalDevice");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExam", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingAppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<int?>("FinalPrice")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("MedicalExam");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExamEpisode", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateReExam")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTakeExam")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("MedicalExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RecordDay")
                        .HasColumnType("datetime");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MedicalExamEpisode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ReExamAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEpisodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("ReExamAppointment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Referral", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfReferral")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Urgency")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Referral");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ReferralDoctor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ReferralId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferralStatus")
                        .HasColumnType("nvarchar");

                    b.Property<string>("ReferredDoctorId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("ReferralDoctor");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.RoomAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("MedicalExamEposodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("RoomAllocation");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.RoomAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("RoomAssignment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<int>("HealthInsurancePrice")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<string>("ResultFromType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<int>("ServicePrice")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Storage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Treatment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<string>("Details")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar");

                    b.HasKey("Id");

                    b.ToTable("Treatment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.AnalysisTest", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.DeviceService", "DeviceService")
                        .WithMany("AnalysisTests")
                        .HasForeignKey("DeviceServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEpisode")
                        .WithMany("AnalysisTests")
                        .HasForeignKey("MedicalExamEpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DeviceService");

                    b.Navigation("MedicalExamEpisode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.AssignmentHistory", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEpisode")
                        .WithMany("AssignmentHistories")
                        .HasForeignKey("MedicalExamEpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HospitalManagementSystem.DataProvider.ReferralDoctor", "ReferralDoctor")
                        .WithOne("AssignmentHistory")
                        .HasForeignKey("HospitalManagementSystem.DataProvider.AssignmentHistory", "ReferralDoctorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalExamEpisode");

                    b.Navigation("ReferralDoctor");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceInventory", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalDevice", "MedicalDevice")
                        .WithMany("DeviceInventorys")
                        .HasForeignKey("MedicalDeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.Storage", "Storage")
                        .WithMany("DeviceInventories")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalDevice");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceService", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.DeviceInventory", "DeviceInventory")
                        .WithMany("DeviceServices")
                        .HasForeignKey("DeviceInventoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.Service", "Service")
                        .WithMany("DeviceServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DeviceInventory");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Diagnosis", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Diseases", "Diseases")
                        .WithMany("Diagnoses")
                        .HasForeignKey("DiseasesId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEposode")
                        .WithMany("Diagnoses")
                        .HasForeignKey("MedicalExamEpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Diseases");

                    b.Navigation("MedicalExamEposode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DiagnosisTreatment", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Diagnosis", "Diagnosis")
                        .WithMany("DiagnosisTreatments")
                        .HasForeignKey("DiagnosisId");

                    b.HasOne("HospitalManagementSystem.DataProvider.Treatment", "Treatment")
                        .WithMany("DiagnosisTreatments")
                        .HasForeignKey("TreatmentId");

                    b.Navigation("Diagnosis");

                    b.Navigation("Treatment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DrugInventory", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.GoodSuppling", "GoodSuppling")
                        .WithOne("DrugInventory")
                        .HasForeignKey("HospitalManagementSystem.DataProvider.DrugInventory", "GoodSupplingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.Storage", "Storage")
                        .WithMany("DrugInventories")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GoodSuppling");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DrugPrescription", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.DrugInventory", "DrugInventory")
                        .WithMany("DrugPrescriptions")
                        .HasForeignKey("DrugInventoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEposode")
                        .WithMany("DrugPrescriptions")
                        .HasForeignKey("MedicalExamEposodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("DrugInventory");

                    b.Navigation("MedicalExamEposode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.GoodSuppling", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Drug", "Drug")
                        .WithMany("GoodSupplings")
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.Importation", "Importation")
                        .WithMany("GoodSupplings")
                        .HasForeignKey("ImportationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Drug");

                    b.Navigation("Importation");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDCode", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Diseases", "Diseases")
                        .WithMany("ICDCodes")
                        .HasForeignKey("DiseasesId");

                    b.Navigation("Diseases");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDCodeVersion", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.ICDCode", "ICDCode")
                        .WithMany("ICDCodeVersions")
                        .HasForeignKey("ICDCodeId");

                    b.HasOne("HospitalManagementSystem.DataProvider.ICDVersion", "ICDVersion")
                        .WithMany("ICDCodeVersions")
                        .HasForeignKey("ICDVersionId");

                    b.Navigation("ICDCode");

                    b.Navigation("ICDVersion");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExam", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.BookingAppointment", "BookingAppointment")
                        .WithOne("MedicalExam")
                        .HasForeignKey("HospitalManagementSystem.DataProvider.MedicalExam", "BookingAppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("BookingAppointment");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExamEpisode", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExam", "MedicalExam")
                        .WithMany("MedicalExamEpisodes")
                        .HasForeignKey("MedicalExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalExam");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ReExamAppointment", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEpisode")
                        .WithOne("ReExamAppointment")
                        .HasForeignKey("HospitalManagementSystem.DataProvider.ReExamAppointment", "MedicalExamEpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalExamEpisode");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Referral", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExam", "MedicalExam")
                        .WithMany("Referrals")
                        .HasForeignKey("MedicalExamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalExam");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ReferralDoctor", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Referral", "Referral")
                        .WithMany("ReferralDoctors")
                        .HasForeignKey("ReferralId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Referral");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Room", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Department", "Department")
                        .WithMany("Rooms")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.RoomAllocation", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.MedicalExamEpisode", "MedicalExamEposode")
                        .WithMany("RoomAllocations")
                        .HasForeignKey("MedicalExamEposodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HospitalManagementSystem.DataProvider.Room", "Room")
                        .WithMany("RoomAllocations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("MedicalExamEposode");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.RoomAssignment", b =>
                {
                    b.HasOne("HospitalManagementSystem.DataProvider.Room", "Room")
                        .WithMany("RoomAssignments")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.BookingAppointment", b =>
                {
                    b.Navigation("MedicalExam");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Department", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceInventory", b =>
                {
                    b.Navigation("DeviceServices");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DeviceService", b =>
                {
                    b.Navigation("AnalysisTests");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Diagnosis", b =>
                {
                    b.Navigation("DiagnosisTreatments");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Diseases", b =>
                {
                    b.Navigation("Diagnoses");

                    b.Navigation("ICDCodes");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Drug", b =>
                {
                    b.Navigation("GoodSupplings");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.DrugInventory", b =>
                {
                    b.Navigation("DrugPrescriptions");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.GoodSuppling", b =>
                {
                    b.Navigation("DrugInventory");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDCode", b =>
                {
                    b.Navigation("ICDCodeVersions");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ICDVersion", b =>
                {
                    b.Navigation("ICDCodeVersions");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Importation", b =>
                {
                    b.Navigation("GoodSupplings");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalDevice", b =>
                {
                    b.Navigation("DeviceInventorys");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExam", b =>
                {
                    b.Navigation("MedicalExamEpisodes");

                    b.Navigation("Referrals");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.MedicalExamEpisode", b =>
                {
                    b.Navigation("AnalysisTests");

                    b.Navigation("AssignmentHistories");

                    b.Navigation("Diagnoses");

                    b.Navigation("DrugPrescriptions");

                    b.Navigation("ReExamAppointment");

                    b.Navigation("RoomAllocations");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Referral", b =>
                {
                    b.Navigation("ReferralDoctors");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.ReferralDoctor", b =>
                {
                    b.Navigation("AssignmentHistory");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Room", b =>
                {
                    b.Navigation("RoomAllocations");

                    b.Navigation("RoomAssignments");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Service", b =>
                {
                    b.Navigation("DeviceServices");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Storage", b =>
                {
                    b.Navigation("DeviceInventories");

                    b.Navigation("DrugInventories");
                });

            modelBuilder.Entity("HospitalManagementSystem.DataProvider.Treatment", b =>
                {
                    b.Navigation("DiagnosisTreatments");
                });
#pragma warning restore 612, 618
        }
    }
}
