@namespace HospitalManagementSystem.Blazor

<FluentDialogHeader>
    <FluentPersona Name="@SetUserFullName(Content)"
                   Status="@StatusConverter(Content.IsFullyPaid)"
                   StatusSize="PresenceBadgeSize.Small"
                   Image=":)"
                   ImageSize="50px"/>
    <br/>
    <FluentStack>
        Move in: 
        <FluentBadge Fill="somevalue" BackgroundColor="black" Color="white">
            @Content.CreatedOn.ToString("dd/MM/yy")
        </FluentBadge>
        Phone number: 
        <FluentBadge Fill="somevalue" BackgroundColor="black" Color="white">
            @Content.PhoneNumber
        </FluentBadge>
    </FluentStack>
</FluentDialogHeader>
<FluentDialogBody>
    <div style="max-height: 350px; overflow-y: auto; overflow-x: auto">
        <FluentDataGrid Id="membersgrid" 
                        Items=@Content.Bills.AsQueryable() 
                        GridTemplateColumns="2fr 2fr 2fr 2fr 2fr 2fr"
                        TGridItem=OutputBillDTO>
            <TemplateColumn Title="Services" Align=Align.Start>
                @if (!context!.MedicalExamEpisodeDTO!.AnalysisTestDTOs!.Any())
                {
                    <FluentBadge Fill="somevalue" 
                                 BackgroundColor="black" 
                                 Color="white"> 
                        No services were selected 
                    </FluentBadge> 
                }
                else{
                    <FluentHorizontalScroll Speed="600" Easing=ScrollEasing.EaseInOut>
                        @foreach (var analysis in context!.MedicalExamEpisodeDTO!.AnalysisTestDTOs!)
                        {
                            <FluentBadge Fill="somevalue">
                                @analysis.DeviceServiceDTO!.ServiceDTO!.Name
                            </FluentBadge>
                        }
                    </FluentHorizontalScroll >
                }
            </TemplateColumn>
            <PropertyColumn Title="Deadline" Property="@(c => c!.Deadline.ToString("dd/MM/yy"))" Sortable="true" Align=Align.Start />
            <TemplateColumn Title="Paid date">
                <FluentBadge Fill="somevalue" BackgroundColor="@SetPaidDateColor(context)"
                             Color="white"> 
                    @(context.PaidDate.HasValue ? context.PaidDate.Value.ToString("dd/MM/yy") : "Not paid") 
                </FluentBadge> 
            </TemplateColumn>
            <PropertyColumn Title="Amount" Property="@(c => PricePerBill(c))" Sortable="true" Align=Align.Start />
            <PropertyColumn Title="Excess" Property="@(c => c.ExcessAmount)" Sortable="true" Align="Align.Start"/>
            <PropertyColumn Title="Underpaid" Property="@(c => c.UnderPaidAmount)" Sortable="true" Align="Align.Start"/>
@*             <TemplateColumn Title="Actions" Align=Align.Start>
                <FluentStack>
                    <FluentButton IconStart="@(new Icons.Regular.Size24.Copy())" Appearance="Appearance.Outline" 
                                    OnClick="@(async () => await CopyToClipboard(context.Id.ToString()))"/>
                </FluentStack>
            </TemplateColumn> *@
        </FluentDataGrid>
    </div>
</FluentDialogBody>
<FluentDialogFooter>
    @if(Content.Bills.Any()){
        <FluentLabel Typo="Typography.H3" Color="Color.Accent"> Total Amount: @(PriceInTotal()) </FluentLabel>
    }
    else{
        <FluentLabel Typo="Typography.H3" Color="Color.Success"> All paid up !!!!</FluentLabel>
    
    }
</FluentDialogFooter>