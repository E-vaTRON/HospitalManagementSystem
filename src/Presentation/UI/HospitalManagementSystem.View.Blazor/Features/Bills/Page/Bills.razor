@page "/bills"
@namespace HospitalManagementSystem.Blazor
@rendermode InteractiveServer
@attribute [StreamRendering]
@inherits AuthenticationComponentBase

<PageTitle>Bills</PageTitle>

<FluentStack VerticalGap="15" Orientation="Orientation.Vertical">
    <FluentCard AreaRestricted="false">
        <FluentToolbar id="toolbar-fluent-components-two" style="width:100%">
            <FluentButton IconStart="@(new Icons.Regular.Size24.AddCircle())" 
                          Appearance="Appearance.Accent" 
                          OnClick="@(() => OpenAddBillDialog())">
                Add bill
            </FluentButton>
            <FluentButton IconStart="@(new Icons.Regular.Size24.ArrowDownload())"
                    Appearance="Appearance.Outline"
                    @onclick=@( async () => await DownloadExcel()) />
        </FluentToolbar>
    </FluentCard>

    <FluentCard AreaRestricted="false">
        <FluentStack HorizontalGap="5">
            <FluentStack Orientation="Orientation.Vertical">
                Filter by last name:   
                @* Chỉnh cái này lại *@
                <FluentSearch @bind-Value=State.LastNameFilter
                              @bind-Value:after=HandleTextFilterInput
                              Placeholder="Last name filter">
                              
                    <FluentIcon Value="@(new Icons.Regular.Size16.Filter())" 
                                Color="@Color.Neutral" 
                                Slot="start" />
                </FluentSearch>
            </FluentStack>
            <FluentStack Orientation="Orientation.Vertical">
                @* Chỉnh cái này lại *@
                <FluentRadioGroup Name="amountRadioChoiceGroup" 
                                  @bind-Value=State.AmountRadioChoice
                                  @bind-Value:after=SelectedChoice
                                  Orientation="Orientation.Horizontal" 
                                  Label="Sort by amount:">
                    <FluentRadio Value=@("1")>
                            None 🚫
                    </FluentRadio>
                    <FluentRadio Value=@("2")>
                            Ascending ⬆️
                    </FluentRadio>
                    <FluentRadio Value=@("3")>
                            Descending ⬇️
                    </FluentRadio>
                </FluentRadioGroup>
            </FluentStack>
            <FluentStack Orientation="Orientation.Vertical">
                @* Chỉnh cái này lại *@
                <FluentRadioGroup Name="createdDateRadioChoiceGroup"
                                    @bind-Value=State.CreatedDateRadioChoice
                                    @bind-Value:after=SelectedChoice
                                    Orientation="Orientation.Horizontal" 
                                    Label="Sort by created date:">
                    <FluentRadio Value=@("1")>
                            None 🚫
                    </FluentRadio>
                    <FluentRadio Value=@("2")>
                            Ascending ⬆️
                    </FluentRadio>
                    <FluentRadio Value=@("3")>
                            Descending ⬇️ 
                    </FluentRadio>
                </FluentRadioGroup>
            </FluentStack>
            <FluentStack Orientation="Orientation.Vertical">
                @* Chỉnh cái này lại *@
                <FluentRadioGroup Name="deadlineRadioChoiceGroup" 
                                    @bind-Value=State.DeadlineRadioChoice
                                    @bind-Value:after=SelectedChoice
                                    Orientation="Orientation.Horizontal" 
                                    Label="Sort by deadline:">
                    <FluentRadio Value=@("1")>
                            None 🚫
                    </FluentRadio>
                    <FluentRadio Value=@("2")>
                            Ascending ⬆️
                    </FluentRadio>
                    <FluentRadio Value=@("3")>
                            Descending ⬇️ 
                    </FluentRadio>
                </FluentRadioGroup>
            </FluentStack>
            <FluentButton IconStart="@(new Icons.Regular.Size24.DismissCircle())" 
                          Appearance="Appearance.Outline" 
                          @onclick=@(() => ClearFormats()) />
        </FluentStack>
    </FluentCard>

    @if (State.ModifiedBills is null)
    {
        <FluentProgressRing />
    }
    else
    {
        <FluentCard>
            <FluentDataGrid Id="membersgrid" 
                            Style="overflow:auto;" 
                            ResizableColumns=true 
                            Items=@State.ModifiedBills.AsQueryable()
                            GridTemplateColumns="3.0fr 2fr 2fr 3fr 2fr 1.5fr"
                            TGridItem=BillWithUserAndServicesModel>
@*                     <TemplateColumn Title="ID" Align=Align.Start>
                        <FluentStack>
                            <FluentButton Appearance="Appearance.Outline" 
                                          OnClick="@(async () => await CopyToClipboard(context.Id.ToString()))">
                                            @context.Id
                            </FluentButton>
                        </FluentStack>
                    </TemplateColumn> *@
                    <TemplateColumn Title="Services" Align=Align.Start>
                        @if(!context!.Services.Any())
                        {
                            <FluentBadge Fill="somevalue" BackgroundColor="black" Color="white">
                                No services were selected 
                            </FluentBadge> 
                        }
                        else{
                            <FluentHorizontalScroll Speed="600" Easing=ScrollEasing.EaseInOut>
                                @foreach (var service in context!.Services)
                                {
                                    <FluentBadge Fill="somevalue">
                                        @service!.Name
                                    </FluentBadge>
                                }
                            </FluentHorizontalScroll >
                        }
                        </TemplateColumn>
                    <PropertyColumn Title="Created Date" Property="@(c => c!.CreatedOn)" Format="dd/MM/yy" Sortable="true" Align=Align.Start />
                    <PropertyColumn Title="Deadline" Property="@(c => c!.Deadline)" Format="dd/MM/yy" Sortable="true" Align=Align.Start />
                    <PropertyColumn Title="Full name" Property="@(c => c!.User != null ? c.User.FirstName + " " + c.User.LastName : "No user assigned")" Sortable="true" Align=Align.Start />
                    <PropertyColumn Title="Amount" Property="@(c => c!.User != null ? PricePerBill(c) : "No user assigned")" Sortable="true" Align=Align.Center />
                    <TemplateColumn Title="Actions" Align=Align.Center>
                        <FluentStack>
                        <FluentButton IconStart="@(new Icons.Regular.Size24.Money())" Appearance="Appearance.Outline" @onclick=@(async () => await OpenProcessBillDialog(context)) />
                            @* <FluentButton IconStart="@(new Icons.Regular.Size24.Edit())" Appearance="Appearance.Outline" @onclick=@(() => {})/> *@
                        <FluentButton IconStart="@(new Icons.Regular.Size24.Delete())" Appearance="Appearance.Outline" @onclick=@(async () => await DeleteAsync(context)) />
                        </FluentStack>
                    </TemplateColumn>
                    </FluentDataGrid>
            <br/>
            <div>
                <FluentStack HorizontalGap="5">
                    @foreach (var currentPage in State.PaginationCount)
                    {
                        <FluentButton Appearance="PageButtonAppearance(currentPage)" 
                                      @onclick="@(() => 
                                      {
                                          RefreshData(currentPage, State.LastNameFilter, State.AmountRadioChoice, State.CreatedDateRadioChoice, State.DeadlineRadioChoice);
                                          State.CurrentPage = currentPage;
                                      })">
                            @State.CurrentPage
                        </FluentButton>
                    }
                </FluentStack>
            </div>
        </FluentCard>
    }
</FluentStack>